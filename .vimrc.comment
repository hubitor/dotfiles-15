"Plug 'Shougo/neocomplete.vim'
"Plug 'Shougo/neomru.vim'
"Plug 'Shougo/neosnippet-snippets'
"Plug 'Shougo/neosnippet.vim'
"Plug 'Shougo/vimproc'
"Plug 'Shougo/vimshell.vim'
"Plug 'VundleVim/Vundle.vim'
"Plug 'deris/columnjump'

"if has('conceal')
"  set conceallevel=2 concealcursor=niv
"endif
"if !exists('g:neocomplete#keyword_patterns')
"    let g:neocomplete#keyword_patterns = {}
"endif
"if !exists('g:neocomplete#sources#omni#input_patterns')
"  let g:neocomplete#sources#omni#input_patterns = {}
"endif
"if has('mac')
"  let g:vimproc_dll_path = $VIMRUNTIME . '/autoload/vimproc_mac.so'
"elseif has('win32')
"  let g:vimproc_dll_path = $HOME . '.vim/bundle/vimproc/autoload/vimproc_win32.dll'
"elseif has('win64')
"  let g:vimproc_dll_path = $HOME . '.vim/bundle/vimproc/autoload/vimproc_win64.dll'
"endif
"fu! s:my_cr_function()
"  return neocomplete#close_popup() . "\<CR>"
"endf
"
"let g:neosnippet#enable_snipmate_compatibility = 1
"let g:neosnippet#snippets_directory='~/.vim/bundle/vim-snippets/snippets'
"let g:acp_enableAtStartup = 0
"
"imap jj <ESC>H<Plug>(easymotion-j)
"imap ww <ESC><Plug>(easymotion-bd-wl)
"imap <expr><C-g>     neocomplete#undo_completion()
"imap <expr><C-l>     neocomplete#complete_common_string()
"imap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
"imap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
"imap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
"imap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"
"imap <expr><C-y>  neocomplete#close_popup()
"imap <expr><C-e>  neocomplete#cancel_popup()
"imap <C-k> <Plug>(neosnippet_expand_or_jump)
"imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
"	\ "\<Plug>(neosnippet_expand_or_jump)"
"	\: pumvisible() ? "\<C-n>" : "\<TAB>"


"let g:vim_json_syntax_conceal = 0
"let g:neocomplete#enable_at_startup = 1
"let g:neocomplete#enable_smart_case = 1
"let g:neocomplete#sources#syntax#min_keyword_length = 3
"let g:neocomplete#lock_buffer_name_pattern = '\*ku\*'
"let g:neocomplete#keyword_patterns['default'] = '\h\w*'
"let g:neocomplete#sources#omni#input_patterns.perl = '\h\w*->\h\w*\|\h\w*::'
"let g:neocomplete#sources#dictionary#dictionaries = {
"	\ 'default' : '',
"	\ 'vimshell' : $HOME.'/.vimshell_hist',
"	\ 'scheme' : $HOME.'/.gosh_completions'
"	\ }

"smap <C-k> <Plug>(neosnippet_expand_or_jump)
"smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
"	\ "\<Plug>(neosnippet_expand_or_jump)"
"	\: "\<TAB>"
"
"xmap <C-k> <Plug>(neosnippet_expand_target)
"xmap <C-l> [unite]
"xmap [unite] <Nop>
